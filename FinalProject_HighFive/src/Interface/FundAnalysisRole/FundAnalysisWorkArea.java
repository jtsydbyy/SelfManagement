/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.FundAnalysisRole;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Enterprise.Bank;
import Business.Enterprise.Enterprise;
import Business.Enterprise.FundCompany;
import Business.FundProduct.FundProduct;
import Business.FundProduct.FundProductDirectory;
import Business.Network.Network;
import Business.Organization.BankSavingsOrganization;
import Business.Organization.FundCompanyAnalysisOraganization;
import Business.Organization.Organization;
import Business.TradeInformation.PurchaseTrade;
import Business.TradeInformation.Trade;
import Business.TradeInformation.TradeDirectory;
import Business.UserAccount.UserAccount;
import java.awt.Color;
import java.awt.Paint;
import java.util.HashMap;
import java.util.Map;
import java.util.SortedSet;
import java.util.TreeMap;
import java.util.TreeSet;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author yangyun
 */
public class FundAnalysisWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form FundAnalysisWorkArea
     */
    JPanel upc;
    UserAccount ua;
    FundCompanyAnalysisOraganization fcao;
    FundCompany fc;
    FundProductDirectory fundProductDirectory;
    EcoSystem business;

    public FundAnalysisWorkArea(JPanel upc, UserAccount ua, FundCompanyAnalysisOraganization fcao, FundCompany fc, EcoSystem business) {
        initComponents();
        this.upc = upc;
        this.ua = ua;
        this.fcao = fcao;
        this.fc = fc;
        this.business = business;
        this.fundProductDirectory = fc.getFundProductDirectory();
        lblEnterprise.setText(fc.getName());
        populateTable();

    }

    private void populateTable() {

        DefaultTableModel model = (DefaultTableModel) tblManageFunds.getModel();

        model.setRowCount(0);

        for (FundProduct fp : fundProductDirectory.getFundProductDirectory()) {
            Object[] row = new Object[5];
            row[0] = fp.getName();
            row[1] = fp.getSales();
            row[2] = fp.getFundType();
            row[3] = fp.getPurchasePrice();
            row[4] = fp.getRedemptionPrice();
            model.addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblEnterprise = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblManageFunds = new javax.swing.JTable();
        btnFund = new javax.swing.JButton();
        btnType = new javax.swing.JButton();
        btnPurchase = new javax.swing.JButton();
        btnRedemption = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Analysis Fund Trade");

        jLabel2.setText("Enterprise:");

        tblManageFunds.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fund Name", "Sales", "Type", "Purchase Price", "Redemption Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblManageFunds);
        if (tblManageFunds.getColumnModel().getColumnCount() > 0) {
            tblManageFunds.getColumnModel().getColumn(0).setResizable(false);
            tblManageFunds.getColumnModel().getColumn(1).setResizable(false);
            tblManageFunds.getColumnModel().getColumn(2).setResizable(false);
            tblManageFunds.getColumnModel().getColumn(3).setResizable(false);
            tblManageFunds.getColumnModel().getColumn(4).setResizable(false);
        }

        btnFund.setBackground(new java.awt.Color(255, 255, 255));
        btnFund.setText("Fund Sales Analysis");
        btnFund.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFundActionPerformed(evt);
            }
        });

        btnType.setBackground(new java.awt.Color(255, 255, 255));
        btnType.setText("Type Sales Analysis");
        btnType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTypeActionPerformed(evt);
            }
        });

        btnPurchase.setBackground(new java.awt.Color(255, 255, 255));
        btnPurchase.setText("Purchase Price Comparison");
        btnPurchase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPurchaseActionPerformed(evt);
            }
        });

        btnRedemption.setBackground(new java.awt.Color(255, 255, 255));
        btnRedemption.setText("Redemption Price Comparison");
        btnRedemption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRedemptionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(131, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(414, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(lblEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnFund)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnType)
                        .addGap(69, 69, 69))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnPurchase)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRedemption))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblEnterprise))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFund)
                    .addComponent(btnType))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPurchase)
                    .addComponent(btnRedemption))
                .addContainerGap(82, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnFundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFundActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset barchartdata = new DefaultCategoryDataset();

        lblEnterprise.setText(fc.getName());
        for (FundProduct fp : fundProductDirectory.getFundProductDirectory()) {

            barchartdata.setValue(fp.getSales(), "Sales", fp.getName());

        }

        JFreeChart barchart = ChartFactory.createBarChart("Comparison", "Fund Name", "Sales", barchartdata, PlotOrientation.VERTICAL, true, true, false);
        CategoryPlot barchar = barchart.getCategoryPlot();
        barchar.setRangeGridlinePaint(Color.BLUE);
        ChartPanel barPanel = new ChartPanel(barchart);

        ChartFrame frame = new ChartFrame("Bar Chart", barchart);
        frame.setVisible(true);
        frame.setSize(450, 500);
    }//GEN-LAST:event_btnFundActionPerformed

    private void btnTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTypeActionPerformed
        // TODO add your handling code here:
        int stockFund = 0;
        int bondFund = 0;
        int moneymarketFund = 0;
        int commingleFund = 0;
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        lblEnterprise.setText(fc.getName());
        for (FundProduct fp : fundProductDirectory.getFundProductDirectory()) {
            if (fp.getFundType() == FundProduct.FundType.StockFund) {
                stockFund = stockFund + fp.getSales();
                pieDataset.setValue(fp.getFundType().toString() + "FundType", stockFund);
            }
            if (fp.getFundType() == FundProduct.FundType.BondFund) {
                bondFund += fp.getSales();
                pieDataset.setValue(fp.getFundType().toString() + "FundType", bondFund);
            }
            if (fp.getFundType() == FundProduct.FundType.MoneyMarketFund) {
                moneymarketFund += fp.getSales();
                pieDataset.setValue(fp.getFundType().toString() + "FundType", moneymarketFund);
            }
            if (fp.getFundType() == FundProduct.FundType.CommingledFund) {
                commingleFund += fp.getSales();
                pieDataset.setValue(fp.getFundType().toString() + "FundType", commingleFund);
            }
        }
        JFreeChart chart = ChartFactory.createPieChart("Pie Chart", pieDataset, true, true, false);
        // PiePlot p = (PiePlot)chart.getPlot();
        // p.setForegroundAlpha(TOP_ALIGNMENT);
        ChartFrame frame = new ChartFrame("Pie Chart", chart);
        frame.setBackground(Color.WHITE);
        frame.setVisible(true);
        frame.setSize(450, 500);
    }//GEN-LAST:event_btnTypeActionPerformed

    private void btnRedemptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRedemptionActionPerformed
        
        HashMap<Double, Integer> priceMap = new HashMap<Double, Integer>();

        for (FundProduct fp : fundProductDirectory.getFundProductDirectory()) {
            if (priceMap.containsKey(fp.getRedemptionPrice())) {
                double key = fp.getRedemptionPrice();
                priceMap.put(key, priceMap.get(key) + fp.getSales());
            } else {
                double key = fp.getRedemptionPrice();
                priceMap.put(key, fp.getSales());

            }
        }

         DefaultCategoryDataset linechartdata = new DefaultCategoryDataset();
        
        SortedSet<Double> keys = new TreeSet<Double>(priceMap.keySet());
        String xtitle="Redemption";
        for (Double key : keys) {
            int value = priceMap.get(key);
            System.out.println("key:"+key +" value:"+ value);
            linechartdata.setValue(value, xtitle, key);
            // do something
        }

       

        JFreeChart lineChart = ChartFactory.createLineChart("Comparison", "Redemption Price", "Sales", linechartdata, PlotOrientation.VERTICAL, true, true, false);
        CategoryPlot barchar = lineChart.getCategoryPlot();
        barchar.setRangeGridlinePaint(Color.BLUE);
        ChartPanel barPanel = new ChartPanel(lineChart);

        ChartFrame frame = new ChartFrame("Line Chart", lineChart);
        frame.setVisible(true);
        frame.setSize(450, 500);
    }//GEN-LAST:event_btnRedemptionActionPerformed

    private void btnPurchaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPurchaseActionPerformed
        // TODO add your handling code here:

        HashMap<Double, Integer> priceMap = new HashMap<Double, Integer>();

        for (FundProduct fp : fundProductDirectory.getFundProductDirectory()) {
            if (priceMap.containsKey(fp.getPurchasePrice())) {
                double key = fp.getPurchasePrice();
                priceMap.put(key, priceMap.get(key) + fp.getSales());
            } else {
                double key = fp.getPurchasePrice();
                priceMap.put(key, fp.getSales());

            }
        }

         DefaultCategoryDataset linechartdata = new DefaultCategoryDataset();
        
        SortedSet<Double> keys = new TreeSet<Double>(priceMap.keySet());
        String xtitle="Purchase";
        for (Double key : keys) {
            int value = priceMap.get(key);
            System.out.println("key:"+key +" value:"+ value);
            linechartdata.setValue(value, xtitle, key);
            // do something
        }

       
//
//        lblEnterprise.setText(fc.getName());
//        for (FundProduct fp : fundProductDirectory.getFundProductDirectory()) {
//            if (fp.getPurchasePrice() >= 0 && fp.getPurchasePrice() <= 500) {
//                a += fp.getSales();
//                linechartdata.setValue(a, "0-500", "");
//            }
//
//        }

        JFreeChart lineChart = ChartFactory.createLineChart("Comparison", "Purchase Price", "Sales", linechartdata, PlotOrientation.VERTICAL, true, true, false);
        CategoryPlot barchar = lineChart.getCategoryPlot();
        barchar.setRangeGridlinePaint(Color.BLUE);
        ChartPanel barPanel = new ChartPanel(lineChart);

        ChartFrame frame = new ChartFrame("Line Chart", lineChart);
        frame.setVisible(true);
        frame.setSize(450, 500);
    }//GEN-LAST:event_btnPurchaseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFund;
    private javax.swing.JButton btnPurchase;
    private javax.swing.JButton btnRedemption;
    private javax.swing.JButton btnType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEnterprise;
    private javax.swing.JTable tblManageFunds;
    // End of variables declaration//GEN-END:variables
}
